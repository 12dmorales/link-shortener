node server.js
npm install express mongoose shortid request-ip axios
exit
app.listen(3000, () => console.log('Servidor corriendo en http://localhost:3000'));
// Iniciar servidor
});
  });
    }, {}),
      return acc;
      acc[country] = (acc[country] || 0) + 1;
    countries: link.countries.reduce((acc, country) => {
    clicks: link.clicks,
  res.json({
  if (!link) return res.status(404).send('Enlace no encontrado');
  const link = await Link.findOne({ shortCode });
  const { shortCode } = req.params;
app.get('/stats/:shortCode', async (req, res) => {
// Obtener estadísticas
});
  res.redirect(link.originalUrl);
  await link.save();
  link.countries.push(country);
  const { data: { country } } = await axios.get(`http://ip-api.com/json/${ip}`);
  const ip = requestIp.getClientIp(req);
  link.clicks += 1;
  // Registrar clic y país
  if (!link) return res.status(404).send('Enlace no encontrado');
  const link = await Link.findOne({ shortCode });
  const { shortCode } = req.params;
app.get('/:shortCode', async (req, res) => {
// Redirigir y registrar clics
});
  res.json({ shortUrl: `http://localhost:3000/${shortCode}` });
  await link.save();
  const link = new Link({ originalUrl, shortCode, extension });
  const shortCode = extension || shortid.generate();
  const { originalUrl, extension } = req.body;
app.post('/shorten', async (req, res) => {
// Acortar enlace
const Link = mongoose.model('Link', LinkSchema);
});
  countries: [String],
  clicks: { type: Number, default: 0 },
  extension: String,
  shortCode: String,
  originalUrl: String,
const LinkSchema = new mongoose.Schema({
// Modelo de la base de datos
});
  useUnifiedTopology: true,
  useNewUrlParser: true,
// Conexión a MongoDB
app.use(express.json());
const app = express();
const axios = require('axios');
const requestIp = require('request-ip');
const shortid = require('shortid');
const mongoose = require('mongoose');
const express = require('express');
$ npm install express
$ npm install express --save
entry point: (index.js)
$ npm init
$ cd myapp
$ mkdir myapp